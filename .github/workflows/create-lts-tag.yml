name: Tag and Recreate LTS Release

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  recreate-lts-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Git identity
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Determine LTS tag and update
        id: vars
        env:
          BRANCH_REF: ${{ github.event.release.target_commitish }}
          RELEASE_TAG: ${{ github.event.release.tag_name }}
          RELEASE_BODY: ${{ github.event.release.body }}
        run: |
          echo "Release published from branch: $BRANCH_REF"

          if [[ "$BRANCH_REF" =~ ^0\.12 ]]; then
            VERSION_PREFIX="0.12"
          elif [[ "$BRANCH_REF" =~ ^1\.2 ]]; then
            VERSION_PREFIX="1.2"
          else
            echo "Skipping: not an LTS branch"
            exit 0
          fi

          LTS_TAG="${VERSION_PREFIX}-lts"
          echo "LTS_TAG=$LTS_TAG" >> "$GITHUB_OUTPUT"

          # Force update the tag to the current commit
          COMMIT_SHA=$(git rev-parse HEAD)
          git tag -f "$LTS_TAG" "$COMMIT_SHA"
          git push origin -f "$LTS_TAG"

          # Write release notes into env (for multiline input)
          echo "RELEASE_BODY<<EOF" >> "$GITHUB_ENV"
          echo "${RELEASE_BODY}" >> "$GITHUB_ENV"
          echo "EOF" >> "$GITHUB_ENV"

      - name: Delete existing LTS release (if any)
        continue-on-error: true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LTS_TAG: ${{ steps.vars.outputs.LTS_TAG }}
        run: |
          echo "Trying to delete existing release for $LTS_TAG"
          gh release delete "$LTS_TAG" -y

      - name: Create fresh LTS release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LTS_TAG: ${{ steps.vars.outputs.LTS_TAG }}
          RELEASE_BODY: ${{ env.RELEASE_BODY }}
        run: |
          echo "Creating new GitHub release for $LTS_TAG"
          gh release create "$LTS_TAG" --title "$LTS_TAG" --notes "$RELEASE_BODY"
  
  call-publish-image:
    needs: recreate-lts-release
    uses: ./.github/workflows/publish.yml
    with:
      tag: ${{ needs.recreate-lts-release.outputs.lts_tag }}
      platforms: linux/amd64,linux/arm64
